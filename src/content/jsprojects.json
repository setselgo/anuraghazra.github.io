[
  {
    "title": "Verlet.js",
    "links": {
      "codepen": "//codepen.io/anuraghazra/embed/zevGrm/?default-tab=result&theme-id=light",
      "github": "//github.com/anuraghazra/verlet.js",
      "download": "//github.com//anuraghazra/verlet.js/archive/master.zip"
    },
    "description": "verlet.js is a 2D Physics Simulation Engine. verlet.js is used for creating rapid and fast verlet physics based models and structures. i was developing this engine for about 4 months and made a electron based desktop drawing application on top of it."
  },
  {
    "title": "Atomic.js",
    "links": {
      "codepen": "//codepen.io/anuraghazra/embed/JxYGNL/?default-tab=result&theme-id=light",
      "github": "//github.com/anuraghazra/atomic.js",
      "download": "//github.com/anuraghazra/Atomic.js/archive/master.zip"
    },
    "description": "Atomic.js is Greatly Simple 2D Physics Engine. It is a collision detection and resolution engine. Can be used in 2d HTML5 games and 2d physics simulations. it uses SAT (Seperation Axis Theorem) Collision Detection and mass seperation collision resolution."
  },
  {
    "title": "Candy.js",
    "links": {
      "codepen": "//codepen.io/anuraghazra/embed/pGjvaR/?default-tab=result&theme-id=light",
      "github": "//github.com/anuraghazra/candy.js",
      "download": "//github.com//anuraghazra/Candy.js/archive/master.zip"
    },
    "description": "Candy.js is CanvasAPI Rendering Toolkit Library. Candy.js is highly inspired by p5.js's methods and functions. but it is more geared towards simplicity and utility functions."
  }
]